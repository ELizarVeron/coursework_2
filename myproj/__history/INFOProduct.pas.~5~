unit INFOProduct;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,TABLE_Products;

type
  TForm20 = class(TForm)
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Image1: TImage;
    Label10: TLabel;
    Label12: TLabel;
    Label1: TLabel;
    Label14: TLabel;
    Edit_Name: TEdit;
    Edit_Type: TEdit;
    Edit_Boss: TEdit;
    Edit_Address: TEdit;
    Edit_Tel: TEdit;
    Edit_Email: TEdit;
    Edit_INN: TEdit;
    Edit_LPP: TEdit;
    Edit_Count: TEdit;
    Edit_Sale: TEdit;
    Label16: TLabel;
    Edit1: TEdit;
    Label11: TLabel;
  private
    FProduct:TProduct;
  public
    procedure Init;
    property Product: TProduct read FProduct write FProduct;
  end;

var
  Form20: TForm20;

implementation
procedure TForm20.Init;
     begin
       if not(Product=nil) then
       begin
          Edit_Name.Text:=agent.Name;

            Edit_Type.Text:=agent.Type_;
            Edit_Boss.Text:=agent.Boss;
            Edit_Address.Text:=agent.Address;
            Edit_Tel.Text:=agent.Tel;
            Edit_Email.Text:=agent.Email;
            Edit_INN.Text:=agent.INN;
            Edit_LPP.Text:=agent.KPP;
            Edit_Count.Text:=agent.Count_s_year.ToString;
            Edit_Sale.Text:=agent.Sale.ToString;
            Edit_Priority.Text:=agent.Priority.ToString;
                if (agent.Logo = '') then
                Image1.Picture.LoadFromFile('icn.png')
                else
                Image1.Picture.LoadFromFile(agent.Logo);

               if (agent.points.Count>0) then
               begin
                   for var  i:= 0 to agent.points.Count-1 do
                begin
                        ListBox1.Items.Add( '"'+ agent.points[i].Name + '" ' + agent.points[i].City + ' ' + agent.points[i].Street + ' ' + Inttostr(agent.points[i].House) + ' ' + Inttostr(agent.points[i].Flat)   );

                end;

               end;



       end;


     end;


{$R *.dfm}

end.
