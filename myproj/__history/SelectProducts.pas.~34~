unit SelectProducts;

interface

uses
  ComObj,Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,Generics.Collections,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids, Data.DB,
  Data.Win.ADODB, Vcl.DBGrids, Main_Class , TABLE_Agents, Product_Class,  Request_Agents_Class;

type
  TForm10 = class(TForm)
    Label1: TLabel;
    ADOTable1: TADOTable;
    DataSource1: TDataSource;
    ComboBox1: TComboBox;
    Label4: TLabel;
    Label2: TLabel;
    Edit1: TEdit;
    ListBox1: TListBox;
    Label3: TLabel;
    Label5: TLabel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    ListBox2: TListBox;
    SaveDialog1: TSaveDialog;
    procedure ComboBox1Change(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure  AppInfoInVList();
    procedure save_in_doc();
    procedure save_request_in_db(arr:array of string;agent_id:integer);
    procedure save_composition_in_db(arr2:array  of string;agent_id:integer);
  private
    var arr: array[0..6] of string;
    var arr2: array[0..2] of string;
  public
    { Public declarations }
     constructor Create( AOwner: TComponent);  override;
     var agent_id:integer;
     var agent_name:string;
     var in_list: array of boolean;
     var counts: array of integer;      //–≈јЋ№Ќџ≈ ќ—“ј““ »
     var v_list: TList<TList<string> >;   //0 им€, 1 - в списке в наличии, 2- в списке под заказ

     var temp_arr: TList<string>;

    var   wdApp, wdDoc, wdRng, wdTable : Variant;
      j, Res : Integer;
    D : TDateTime;
    Sd : TSaveDialog;
       const
  wdAlignParagraphCenter = 1;
  wdAlignParagraphLeft = 0;
  wdAlignParagraphRight = 2;
  wdLineStyleSingle = 1;
  end;

var
  Form10: TForm10;

implementation
      constructor TForm10.Create( AOwner: TComponent);
      begin
         inherited;
         setlength(counts,TProduct_class.array_of_products.Count);
         var  i:integer;
          for i:=0 to TProduct_class.array_of_products.Count-1 do
          begin
             ComboBox1.Items.Add( TProduct_class.array_of_products[i].Name_ );
             counts[i]:= TProduct_class.array_of_products[i].In_stock;

          end;
          setlength(in_list,TProduct_class.array_of_products.Count);
            temp_arr:=TList<string>.create;
            v_list:=TList<TList<string>>.Create;
      end;
{$R *.dfm}
function CopyList(list:TList<string> ): TList<string>;
begin
     var  new: TList<string>;
        new:= TList<string>.create;
      var i:integer;
      for i := 0 to list.Count-1 do
        begin
          new.Add(list[i]);
        end;
        result:= new;

end;


procedure TForm10.Button1Click(Sender: TObject);      //добавление в список
begin

      var str:string;
      var h,n:integer;
      h:=  StrToInt(Label3.Caption);
      n:=   StrToInt(Edit1.Text);


      if(in_list[ComboBox1.ItemIndex]=false) then   //если этого элемента нет в лист боксе
      begin
               if h>= n then   // если  имеем больше чем надо
          begin
                  str:= ComboBox1.Items[ComboBox1.ItemIndex]+ '   ' + Edit1.Text + ' шт ' ;
                  Label3.Caption:=  ( h - n).ToString;   //остаток
                 // temp_arr.Clear;
                    temp_arr:=TList<string>.create;
                  temp_arr.Add(ComboBox1.Items[ComboBox1.ItemIndex]);         //0
                  temp_arr.Add((n).ToString);                                    //1
                  temp_arr.Add('0');                                             //2
                           //temp_arr.Add(h.ToString); //всего в наличии

                                                                //3
                   ListBox2.Items.Add('-----это был темп--если больше имеем чем надо------');
                   var x:integer;
                   var s:string;
                                             for x:= 0 to  temp_arr.Count-1 do
                  //темп аррей по ссылке передаетс€ а надо по знаечни.
                                                 begin

                                                  s:= s+temp_arr[x] + '  '  ;
                                                 end;
                                                  ListBox2.Items.Add(s);
                                                         ListBox2.Items.Add('-----это был темп--если больше имеем чем надо------------');
                                               ListBox2.Items.Add('--------------');


                  v_list.Add(CopyList(temp_arr));
                  in_list[ComboBox1.ItemIndex]:=true;
                  counts[ComboBox1.ItemIndex]:=h-n;
          end
         else     //если не хватает
          begin

                str:= ComboBox1.Items[ComboBox1.ItemIndex]+'   ' +
                h.ToString + ' шт + ' + (n-h).ToString + ' шт под заказ ' ;
                Label3.Caption:=  '0';

                   temp_arr:=TList<string>.create;
                  temp_arr.Add(ComboBox1.Items[ComboBox1.ItemIndex]);         //0  название
                  temp_arr.Add(h.ToString);                                    //1
                  temp_arr.Add((n-h).ToString);                                             //2
                           //temp_arr.Add(h.ToString); //всего в наличии                 //3




                 ListBox2.Items.Add('-----это был темп--меньше чем надо-------');
                  var x:integer;
                    var s:string;
                for x:= 0 to  temp_arr.Count-1 do
                 begin

                s:= s+temp_arr[x] + '  '  ;
               end;
                 ListBox2.Items.Add(s);
                       ListBox2.Items.Add('-----это был темп--меньше чем надо-------');
        ListBox2.Items.Add('--------------');


                v_list.Add(CopyList(temp_arr));
                 in_list[ComboBox1.ItemIndex]:=true;
                 counts[ComboBox1.ItemIndex]:=0;
          end;
                ListBox1.Items.Add(str);
      end

      else               //если есть в списке

      begin
         var i,index:integer;


             for i := 0 to v_list.Count-1 do
        begin
                  if( ComboBox1.Items[ComboBox1.ItemIndex] = v_list[i][0])     //если выбранное название в комбо совпадает с каким то элементов виртуального списка
                  then
                  begin

                        counts[ComboBox1.ItemIndex]:= counts[ComboBox1.ItemIndex] +  StrToInt( v_list[i][1] );   //вернули количество
                        h:=counts[ComboBox1.ItemIndex];


                                             if h>= n then   // если  имеем больше чем надо
                              begin
                                      str:= ComboBox1.Items[ComboBox1.ItemIndex]+ '   ' + Edit1.Text + ' шт ' ;
                                      Label3.Caption:=  ( h - n).ToString;   //остаток
                                       v_list[i][1]:=n.ToString;
                                       v_list[i][2]:='0';

                                      counts[ComboBox1.ItemIndex]:=h-n;
                              end
                             else     //если не хватает
                              begin

                                    str:= ComboBox1.Items[ComboBox1.ItemIndex]+'   ' +
                                    h.ToString + ' шт + ' + (n-h).ToString + ' шт под заказ ' ;
                                      Label3.Caption:=  '0';

                                       v_list[i][1]:=h.ToString;
                                       v_list[i][2]:=(n-h).ToString;




                                       counts[ComboBox1.ItemIndex]:=0;
                              end;
                                  //  ListBox1.Items.Add(str);
                                   ListBox1.Items[i]:=str;
                                      end;

        end;
      end;

          var x:integer;
          for x:= 0 to v_list.Count-1 do
          begin
            var s:string;
            s:= s+v_list[x][0]+ '  ' + v_list[x][1]+ ' ' + v_list[x][2];
             ListBox2.Items.Add(s);
          end;

        ListBox2.Items.Add('--------------');
end;

procedure TForm10.AppInfoInVList();
begin
     var k,i: integer;
       for i := 0 to v_list.Count-1 do
       begin
              for k := 0 to TProduct_Class.array_of_products.Count-1 do

               begin
                    if (TProduct_Class.array_of_products[k].Name_=v_list[i][0] ) then

                   begin
                        v_list[i].Add( TProduct_Class.array_of_products[k].Cost.ToString  )    ;  //цена за единицу 3
                        v_list[i].Add( TProduct_Class.array_of_products[k].Time_.ToString  )    ;  //врем€ изготовлени€  4                                      //врем€ на изготовление
                   end;

               end;
       end;


end;

procedure TForm10.save_request_in_db(arr:array  of string;agent_id:integer);
begin
     var mc:TMain_class;
     mc:=TMain_class.Create();
     var ado2:TADOQuery;
     var next_id:integer;
      ado2:= mc.sql_select('*' , 'Request_from_agent' , ' ' ,'  order by ID_request_agent DESC ', false );
         next_id:=ado2.Fields[0].AsInteger;
     arr[0]:=next_id.ToString;
     arr[1]:=agent_id.ToString;
     arr[2]:='—оздана';
     arr[3]:= FormatDateTime('dd.mm.yyyy hh:nn:ss ', Now);
     arr[4]:='false';
     arr[5]:='false';
     arr[6]:='false';

      mc.sql_insert(' Request_from_agent ' ,arr );



end;

 procedure TForm10.save_composition_in_db(arr2:array  of string;agent_id:integer);
 begin
        var mc:TMain_class;
     mc:=TMain_class.Create();


       var i:integer;
      for I := 0 to v_list.Count-1 do
      begin
          arr2[0]:=(TRequest_Agents_Class.array_of_requests_agent.Count +1).ToString;
          var  article:integer;
          var ado:TADOQuery;
           ado:= mc.sql_select(' article ', ' Products ' , 'where Name_ =  ' + QuotedStr( v_list[i][0]) , ' ' , false );
          arr2[1]:=ado.Fields[0].AsString;

          arr2[2]:= (StrToInt( v_list[i][1] )+ StrToInt(v_list[i][2])).ToString;
             mc.sql_insert(' Composition_of_request ' ,arr2 );

      end;



 end;


 procedure TForm10.save_in_doc();
begin
        wdApp := CreateOleObject('Word.Application');
   Sd := SaveDialog1;
   SaveDialog1.DefaultExt:='docx';
  sd.InitialDir:=' D:\ урсова€\ѕредложени€_дл€_агентов ' ;
  if Sd.InitialDir = ''
  then Sd.InitialDir := ExtractFilePath( ParamStr(0) );
  //«апуск диалога сохранени€ файла.
  if not Sd.Execute then Exit;
  //≈сли файл с заданным именем существует, то запускаем диалог с пользователем.
  if FileExists(Sd.FileName) then begin
    Res := MessageBox(0, '‘айл с заданным именем уже существует. ѕерезаписать?'
      ,'¬нимание!', MB_YESNO + MB_ICONQUESTION + MB_APPLMODAL);
    if Res <> IDYES then Exit;
  end;
  //ѕопытка запустить MS Word.
  try
    wdApp := CreateOleObject('Word.Application');
  except
    MessageBox(0, 'Ќе удалось запустить MS Word. ƒействие отменено.'
      ,'¬нимание!', MB_OK + MB_ICONERROR + MB_APPLMODAL);
    Exit;
  end;
  //ƒелаем видимым окно MS Word. Ќа посто€нной основе или на врем€ отладки.
 // wdApp.Visible := True;  //
  //—оздаЄм новый документ.
  wdDoc := wdApp.Documents.Add;
  //Ќа случай, если очень много данных и wdApp.Visible := True - тогда
  //дл€ ускорени€ работы отключаем перерисовку окна MS Word.
  wdApp.ScreenUpdating := False;
  try
    wdRng := wdDoc.Content; //ƒиапазон, охватывающий всЄ содержимое документа.

    //ѕараграф 1. «аголовок отчЄта.

    //«аголовок отчЄта и перевод строки.
    wdRng.InsertAfter('ѕредложение дл€ '+ agent_name + #13#10);
    //¬ыравнивание по центру.
    wdRng.ParagraphFormat.Alignment := wdAlignParagraphCenter;
    //ѕараметры шрифта.
    wdRng.Font.Name := 'Times New Roman';
    wdRng.Font.Bold := True;
    wdRng.Font.Size := 14;

    //ѕараграф 2. ќбщие сведени€.

    //‘ормируем диапазон нового параграфа непосредственно за текущим диапазоном.
    wdRng.Start := wdRng.End;
    wdRng.InsertAfter(#13#10);
    D := Now;
    wdRng.InsertAfter('ƒата: ' + FormatDateTime('dd.mm.yyyy', D) + #13#10);
    wdRng.InsertAfter('¬рем€: ' + FormatDateTime('hh:nn:ss', D) + #13#10);
    //—брос параметров параграфа.
    wdRng.ParagraphFormat.Reset;
    //¬ыравнивание по левому краю.
    wdRng.ParagraphFormat.Alignment := wdAlignParagraphLeft;
    //ќтступ слева на 2 сантиметра. –азмер отступа задаЄтс€ в типографских
    //единицах - в пунктах. 1 пункт = 0.035 сантиметра.
    //ѕри записи в поле LeftIndent, отступ отсчитываетс€ от левого пол€ на странице.
    //wdRng.ParagraphFormat.LeftIndent := 2 / 0.035;
    //ѕараметры шрифта.
    wdRng.Font.Reset; //—брос параметров шрифта.
    wdRng.Font.Size := 12;
    wdRng.Font.Bold := True;

    //ѕараграф 3. «аголовок таблицы.

    wdRng.Start := wdRng.End;
    wdRng.InsertAfter(#13#10);
    wdRng.InsertAfter('“аблица 1. “овары в наличии и под заказ.'#13#10);
    wdRng.ParagraphFormat.Reset;
    wdRng.Font.Reset;
    wdRng.Font.Size := 12;
    wdRng.Font.Bold := False;

    //ѕараграф 4. “аблица.

  //  if not Query1.Active then Query1.Open;

    wdRng.Start := wdRng.End;
    //ƒобавл€ем таблицу MS Word. ѕока создаЄм таблицу с двум€ строками.
    wdTable := wdDoc.Tables.Add(wdRng.Characters.Last, 2, 5);        //3 это количество столбцов
   //ѕараметры линий таблицы.
   wdTable.Borders.InsideLineStyle :=  wdLineStyleSingle ;
  wdTable.Borders.OutsideLineStyle := wdLineStyleSingle;
    //—брос параметров параграфа.
    wdRng.ParagraphFormat.Reset;
    //¬ыравнивание всей таблицы - по левому краю.
  wdRng.ParagraphFormat.Alignment := wdAlignParagraphLeft;


    //ќформление шапки.
     wdRng := wdTable.Rows.Item(1).Range; //ƒиапазон первой строки.
    wdRng.ParagraphFormat.Alignment := wdAlignParagraphCenter;
    wdRng.Font.Size := 10;
     wdRng.Font.Bold := True;


    //ќформление первой строки данных - это втора€ строка в таблице.
    //ѕри добавлении следующих строк, их оформление будет копироватьс€ с этой строки.
     wdRng := wdTable.Rows.Item(2).Range; //ƒиапазон второй строки.
     wdRng.ParagraphFormat.Alignment := wdAlignParagraphLeft;
     wdRng.Font.Size := 10;
   wdRng.Font.Bold := False;

    ///«аписываем шапку таблицы.


     wdTable.Cell(1, 1).Range.Text := 'Ќаименование товара';
     wdTable.Cell(1, 2).Range.Text := '÷ена за 1ед.';
     wdTable.Cell(1, 3).Range.Text := '¬ наличии';
      wdTable.Cell(1, 4).Range.Text := 'ѕод заказ';
     wdTable.Cell(1, 5).Range.Text := '¬рем€ на изготовление';



       wdTable.Rows.Add;

    var k,i: integer;
     k:= 2; //“екуща€ строка в таблице MS Word.

     AppInfoInVList();

       for i := 0 to v_list.Count-1 do
       begin
               wdTable.Cell(k, 1).Range.Text := v_list[i][0];
               wdTable.Cell(k, 2).Range.Text := v_list[i][3];
               wdTable.Cell(k, 3).Range.Text := v_list[i][1];
               wdTable.Cell(k, 4).Range.Text := v_list[i][2];
               wdTable.Cell(k, 5).Range.Text := v_list[i][4];
               Inc(k);

               wdTable.Rows.Add;

       end;



  finally
    //¬ключение перерисовки окна MS Word. ¬ случае, если wdApp.Visible := True.
  wdApp.ScreenUpdating := True;
 end;

 wdApp.DisplayAlerts := False; //ќтключаем режим показа предупреждений.
 try
    wdDoc.SaveAs(FileName:=Sd.FileName); //«апись документа в файл.
 finally
    wdApp.DisplayAlerts := True; //¬ключаем режим показа предупреждений.
  end;

  //«акрываем документ.
  wdDoc.Close;
  //«акрываем MS Word.
  wdApp.Quit;

end;

 procedure TForm10.Button2Click(Sender: TObject);     //сохранить
    begin
           try
            //    save_in_doc;
                save_request_in_db(arr,agent_id);
                save_composition_in_db(arr2,agent_id);
           finally
                  ShowMessage('ѕредложение успешно созданно');
                   Close;
           end;



    end;

procedure TForm10.Button3Click(Sender: TObject);      //удаление
begin
           var i:integer;

      for i := 0 to v_list.Count-1 do
        begin

                  if( ComboBox1.Items[ComboBox1.ItemIndex] =v_list[i][0])   //если нужно обновить данные на экране
                  then
                  begin
                      label3.Caption:= (counts[i]+ StrToInt(v_list[i][1])).ToString ;  //тут мен€ет цифру на экране

                  end;


        end;

                  v_List.Delete(ListBox1.ItemIndex);


                  in_list[i]:=false;
                  ListBox1.DeleteSelected;


end;

procedure TForm10.ComboBox1Change(Sender: TObject);
begin
       var  i:integer;
       for i:=0 to TProduct_class.array_of_products.Count-1 do
          begin
              if (TProduct_class.array_of_products[i].Name_ =  ComboBox1.Items[ComboBox1.ItemIndex] )   then
              begin
                    if in_list[i] then
                      Label3.Caption:=counts[i].ToString
                    else
                     Label3.Caption:=TProduct_class.array_of_products[i].In_stock.ToString;




              end;
          end;

end;

end.
procedure TForm10.FormCreate(Sender: TObject);
begin

end;



